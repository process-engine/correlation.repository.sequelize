import * as Sequelize from 'sequelize';

import {Runtime} from '@process-engine/process_engine_contracts';

export interface ICorrelationAttributes {
  correlationId: string;
  processModelHash: string;
  processModelId: string;
  processInstanceId: string;
  // If the correlation entry pertains to a subprocess, this will contain
  // The ID of the ProcessInstance that started it.
  parentProcessInstanceId: string;
  identity: string;
  state: Runtime.Types.CorrelationState;
  error?: string;
  // This field is auto-generated by sequelize.
  // Making this property optional will remove the need to for us
  // to manually declare it in the schema.
  createdAt?: Date;
  // Same as createdAt.
  updatedAt?: Date;
}

export type Correlation = Sequelize.Instance<ICorrelationAttributes> & ICorrelationAttributes;

export function defineCorrelation(sequelize: Sequelize.Sequelize): Sequelize.Model<Correlation, ICorrelationAttributes> {

  const attributes: SequelizeAttributes<ICorrelationAttributes> = {
    correlationId: {
      type: Sequelize.STRING,
      allowNull: false,
    },
    processInstanceId: {
      type: Sequelize.STRING,
      allowNull: true,
    },
    parentProcessInstanceId: {
      type: Sequelize.STRING,
      allowNull: true,
    },
    processModelId: {
      type: Sequelize.STRING,
      allowNull: true,
    },
    identity: {
      type: Sequelize.TEXT,
      allowNull: true,
    },
    processModelHash: {
      type: Sequelize.TEXT,
      allowNull: false,
    },
    state: {
      type: Sequelize.STRING,
      allowNull: false,
    },
    error: {
      type: Sequelize.TEXT,
      allowNull: true,
    },
  };

  return sequelize.define<Correlation, ICorrelationAttributes>('Correlation', attributes);
}
